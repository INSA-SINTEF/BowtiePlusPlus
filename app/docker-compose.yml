version: "3"
services:
  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend/nginx/templates:/etc/nginx/templates
      - ./frontend/webapp:/app
    expose:
        - 80
    environment: 
      - NGINX_HOST=localhost
      - NGINX_PORT=80
    container_name: bowtie_web
  nginx-reverse:
    build: ./nginx
    depends_on:
        - api
        - web
    ports: 
        - 80:80
        - 443:443
    volumes:
        - static_volume:/home/app/staticfiles
        - ./nginx/certs:/etc/nginx/certs
        - ./nginx/keys:/etc/nginx/keys
        - ./nginx/dh:/etc/nginx/dh
    container_name: bowtie_reverse_proxy
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    expose:
      - 8000
    volumes:
      - ./backend/app:/app
      - static_volume:/app/staticfiles
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py makemigrations &&
             python manage.py migrate &&
             gunicorn app.wsgi:application --bind 0.0.0.0:8000"
    depends_on:
      - db
    container_name: bowtie_api
  db:
    image: postgres:10-alpine
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=789456123
    container_name: bowtie_db
volumes:
    static_volume:
