version: "3"
services:
  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend/nginx/templates:/etc/nginx/templates
      - ./frontend/webapp:/app
    expose:
            - 80
    image: bowtietool_static
    environment: 
      - NGINX_HOST=localhost
      - NGINX_PORT=80
    depends_on:
            - nginx-reverse
  nginx-reverse:
    build: ./nginx
    ports: 
        - 80:80
        - 443:443
    volumes:
            - static_volume:/home/app/staticfiles
            - ./nginx/certs:/etc/nginx/certs
            - ./nginx/keys:/etc/nginx/keys
            - ./nginx/dh:/etc/nginx/dh
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    expose:
      - 8000
    volumes:
      - ./backend/app:/app
      - static_volume:/app/staticfiles
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&  
             gunicorn app.wsgi:application --bind 0.0.0.0:8000"
    depends_on:
      - db
      - nginx-reverse
  db:
    image: postgres:10-alpine
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=789456123
volumes:
          static_volume:
